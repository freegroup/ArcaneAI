"use strict";(self.webpackChunkgithub_pages=self.webpackChunkgithub_pages||[]).push([[115],{2044:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>r,toc:()=>u});const r=JSON.parse('{"id":"setup/prerequisites","title":"Prerequisites","description":"...so, if your curiosity has been piqued and you\u2019ve been hunting for a \\"Try it out\\" button... sorry, not here. Running an LLM for everyone is just too expensive for us normal folks. But don\u2019t worry, I\u2019ll show you how to get it running locally. There\u2019s just one small hurdle... but hey, consider it the first step in your text adventure\u2014obtain the key! Yes, just like in a classic adventure game, but instead of a rusty old key, you\'ll need an API key from OpenAI to summon GPT-4. \ud83d\ude09","source":"@site/docs/setup/prerequisites.md","sourceDirName":"setup","slug":"/setup/prerequisites","permalink":"/ArcaneAI/setup/prerequisites","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"prerequisites","title":"Prerequisites"},"sidebar":"sidebar","previous":{"title":"Speech","permalink":"/ArcaneAI/examples/stt"},"next":{"title":"Console","permalink":"/ArcaneAI/setup/console"}}');var s=t(4848),o=t(8453);const i={id:"prerequisites",title:"Prerequisites"},a="Prerequisites",l={},u=[{value:"Clone the Repository",id:"clone-the-repository",level:3},{value:"Install Python 3.12.7 and Dependencies",id:"install-python-3127-and-dependencies",level:3},{value:"An API Key for Your Preferred LLM",id:"an-api-key-for-your-preferred-llm",level:3}];function c(e){const n={code:"code",h1:"h1",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"prerequisites",children:"Prerequisites"})}),"\n",(0,s.jsxs)(n.p,{children:["...so, if your curiosity has been piqued and you\u2019ve been hunting for a ",(0,s.jsx)("span",{class:"color",children:'"Try it out"'})," button... sorry, not here. Running an LLM for everyone is just too expensive for us normal folks. But don\u2019t worry, I\u2019ll show you how to get it running locally. There\u2019s just one small hurdle... but hey, consider it the first step in your text adventure\u2014obtain the key! Yes, just like in a classic adventure game, but instead of a rusty old key, you'll need an API key from OpenAI to summon GPT-4. \ud83d\ude09"]}),"\n",(0,s.jsx)(n.p,{children:"There are two versions: a console version and a UI version. The UI version comes with Chrome\u2019s great speech-to-text feature, but for getting started, the console version is just perfect."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)("span",{class:"color",children:"Console Version"}),": The console version can run with user input or voice input by using different Speech-to-Text (STT) engines like Whisper, Faster Whisper, or Google STT."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)("span",{class:"color",children:"Web Version"}),": The web version uses the highly advanced Speech-to-Text engine of the Google Chrome browser, which is powered by a Google backend."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The prerequisites are required for either the bash version and for the Web version"}),"\n",(0,s.jsx)(n.h3,{id:"clone-the-repository",children:"Clone the Repository"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"git clone https://github.com/freegroup/ArcaneAI.git\ncd ArcaneAI\n\n"})}),"\n",(0,s.jsx)(n.h3,{id:"install-python-3127-and-dependencies",children:"Install Python 3.12.7 and Dependencies"}),"\n",(0,s.jsx)(n.p,{children:"Other versions may work as well, but this is tested and works perfectly."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Go into the ./game directory to prepare the Python environment\ncd game \n\n# Create a virtual environment to keep the global environment clean\npython3.12 -m venv venv \n\n# Activate the virtual environment\nsource ./venv/bin/activate  \n\n# Install required libraries\npip install -r requirements.txt\n"})}),"\n",(0,s.jsx)(n.h3,{id:"an-api-key-for-your-preferred-llm",children:"An API Key for Your Preferred LLM"}),"\n",(0,s.jsxs)(n.p,{children:["Due to the use of ",(0,s.jsx)(n.code,{children:"function calling"}),", the only fully working LLM for now is OpenAI GPT-4o. Other models may work with adjustments to the prompt, but as of now, they require more tweaking, and I haven't gotten them running yet."]}),"\n",(0,s.jsxs)(n.p,{children:["I use a ",(0,s.jsx)(n.code,{children:".env"})," file or environment variables to expose API keys for the different LLM and TTS providers. Let\u2019s create one and configure it:"]}),"\n",(0,s.jsxs)(n.p,{children:["Create a file ",(0,s.jsx)(n.code,{children:"./game/.env"})," with the following content:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"OPENAI_API_KEY=#############your-key##########\n\n# Uncomment and set up additional API keys if needed.\n# By default, this project uses OpenAI only.\n#\n#GEMINI_API_KEY=#####gemini-key##################\n#GOOGLE_APPLICATION_CREDENTIALS=./secrets/gen-lang-client-#############.json\n\n# info, debug, error, fatal\nARCANEAI_LOG_LEVEL=info\n\n# Configuration for the web UI\n#\nMAP_FILE=TheTipsyQuest.yaml\nUSERNAME=<username>\nPASSWORD=<password>\n\n"})}),"\n",(0,s.jsx)(n.p,{children:"now you are ready to run a demo setup..."})]})}function d(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>a});var r=t(6540);const s={},o=r.createContext(s);function i(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);